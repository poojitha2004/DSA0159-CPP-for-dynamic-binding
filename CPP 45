#include <iostream>
using namespace std;

int main() {
    int rows, cols;

    cout << "Enter the number of rows: ";
    cin >> rows;
    cout << "Enter the number of columns: ";
    cin >> cols;

    // Dynamically allocate memory for two matrices and the resultant matrix
    int** matrix1 = new int*[rows];
    int** matrix2 = new int*[rows];
    int** sumMatrix = new int*[rows];
    for (int i = 0; i < rows; ++i) {
        matrix1[i] = new int[cols];
        matrix2[i] = new int[cols];
        sumMatrix[i] = new int[cols];
    }

    // Input values for the first matrix
    cout << "Enter the elements of the first matrix:" << endl;
    for (int i = 0; i < rows; ++i) {
        for (int j = 0; j < cols; ++j) {
            cout << "Element at [" << i << "][" << j << "]: ";
            cin >> matrix1[i][j];
        }
    }

    // Input values for the second matrix
    cout << "Enter the elements of the second matrix:" << endl;
    for (int i = 0; i < rows; ++i) {
        for (int j = 0; j < cols; ++j) {
            cout << "Element at [" << i << "][" << j << "]: ";
            cin >> matrix2[i][j];
        }
    }

    // Add the two matrices and store the result in sumMatrix
    for (int i = 0; i < rows; ++i) {
        for (int j = 0; j < cols; ++j) {
            sumMatrix[i][j] = matrix1[i][j] + matrix2[i][j];
        }
    }

    // Display the resultant sum matrix
    cout << "The sum of the two matrices is:" << endl;
    for (int i = 0; i < rows; ++i) {
        for (int j = 0; j < cols; ++j) {
            cout << sumMatrix[i][j] << " ";
        }
        cout << endl;
    }

    // Deallocate the memory for the matrices
    for (int i = 0; i < rows; ++i) {
        delete[] matrix1[i];
        delete[] matrix2[i];
        delete[] sumMatrix[i];
    }
    delete[] matrix1;
    delete[] matrix2;
    delete[] sumMatrix;

    return 0;
}
